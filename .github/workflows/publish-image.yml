name: Publish Docker Image

on:
  push:
    branches:
      - production
      - development

jobs:
  Build-API:
    name: Build Vita API
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push the image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/vita-api:${{ github.ref_name == 'production' && 'latest' || 'dev' }}
          platforms: linux/amd64,linux/arm64
          file: Dockerfile

  Build-MCP:
    name: Build Vita MCP
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./mcp
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/vita-mcp:${{ github.ref_name == 'production' && 'latest' || 'dev' }}
          platforms: linux/amd64,linux/arm64


  Build-Apollo:
    name: Build Apollo
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push the image
        uses: docker/build-push-action@v4
        with:
          context: ./apollo
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/apollo:${{ github.ref_name == 'production' && 'latest' || 'dev' }}
          platforms: linux/amd64,linux/arm64
          file: Dockerfile

  Build-Chronos:
    name: Build Chronos
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push the image
        uses: docker/build-push-action@v4
        with:
          context: ./chronos
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/chronos:${{ github.ref_name == 'production' && 'latest' || 'dev' }}
          platforms: linux/amd64,linux/arm64
          file: Dockerfile
